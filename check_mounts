#!/usr/bin/env bash

# Vim : ts=8; sts=3;
########################################################## 
#    Filename : check_mounts.sh			         #
#     Version : 0.02				         #
# Description : Checks for missing mounts on the present #
#	        vservers on a GNU/Linux system		 #
#							 #
##########################################################

# Nagios exit codes
E_OK=0
E_WARN=1
E_CRIT=2
E_UNKN=3

AWK=/usr/bin/awk
CAT=/bin/cat
CUT=/usr/bin/cut
EGREP=/bin/egrep
TR=/usr/bin/tr
SED=/bin/sed
SUDO=/usr/bin/sudo
FIND=/usr/bin/find
VSERVER=/usr/sbin/vserver

VSERVERS_CONF=/etc/vservers
VSERVERS_DATA=/vservers

MTAB=etc/mtab
FSTAB=fstab

cd ${VSERVERS_CONF}

# find the vservers from /etc/vservers
vservers_list=$( ${FIND} . -maxdepth 1 -type d -not \
		  \( -name 'moved' -o -name 'removed' -o -name '.defaults' \
		  -o -name '.distributions' -o -name '.' \) | \
		  ${CUT} -d '/' -f 2 )

missing_mounts=0
exit_status=${E_OK}

for vserver_name in $vservers_list; do
   # check the vservers mounts only for the running vservers
   vserver_status=$( ${SUDO} ${VSERVER} $vserver_name status | \
			${AWK} 'NR==1 { print $4 }' ) 

   [ "$vserver_status" != "running" ] && continue

   # check if mtab and fstab are present
   if [ ! -e ${VSERVERS_CONF}/${vserver_name}/${FSTAB} ]
   then
      echo "${VSERVERS_CONF}/${vserver_name}/${FSTAB} is missing!"
      exit_status=${E_UNKN}
   fi

   if [ ! -e ${VSERVERS_DATA}/${vserver_name}/${MTAB} ]
   then
      echo "${VSERVERS_DATA}/${vserver_name}/${MTAB} is missing!"
      exit_status=${E_UNKN}
   fi

   # check for missing mounts in fstab
   while read fstab_line; do

      # skip lines starting with a comment '#'
      comment=$( echo $fstab_line | ${SED} -ne '/^#.*$/p' )
      [ ! -z "$comment" ] && continue

      fstab_line=$( echo ${fstab_line} | ${TR} -s '[:blank:]' ' ' )
      fstab_mount=$( echo ${fstab_line} | ${CUT} -d ' ' -f 2 )

      flag=0

      # read every line from mtab file and compare it with
      # the lines from fstab
      while read mtab_line; do
	 mtab_line=$( echo ${mtab_line} | ${TR} -s '[:blank:]' ' ' )
	 mtab_mount=$( echo ${mtab_line} | ${CUT} -d ' ' -f 2 )

	 if [ "${fstab_mount}" = "${mtab_mount}" ]
	 then
	    flag=1
	    break
	 fi
      done < ${VSERVERS_DATA}/${vserver_name}/${MTAB}

      [ ! -z "$fstab_line" ] && \
	 if [ $flag -eq 0 ]
	 then
	    let missing_mounts+=1
	    exit_status=${E_CRIT}
	    mounts_info="${mounts_info}\n${vserver_name} has a missing mount: ${fstab_mount}"
	 fi

      done < ${VSERVERS_CONF}/${vserver_name}/${FSTAB}
done

[ ! -z "${mounts_info}" ] && \
   echo -e "Total mounts missing: ${missing_mounts}${mounts_info}"

[ ${exit_status} -eq 0 ] && \
   echo "All mounts are OK" 

[ ${exit_status} -eq ${E_UNKN} ] && \
   echo "Unknown error"

exit ${exit_status}

